import edu.wpi.first.wpilibj.networktables.NetworkTable;
import edu.wpi.first.wpilibj.tables.ITable;
import edu.wpi.first.wpilibj.tables.ITableListener;

public class Concur implements ITableListener {

	private int _counter;

	private Concur() {
		// Connect to local NetworkTables server
		NetworkTable.setClientMode();
		NetworkTable.setIPAddress("localhost");
		NetworkTable.initialize();

		
		// Initialize the reset counter value we'll read.
		NetworkTable t = NetworkTable.getTable("");
		t.putBoolean("RestCounter", false);
		
		t.addTableListener(this, true);
		
	}

	private void countAndPrint() {
		while (true) {


			int next = _counter + 1;
			System.out.println("Counter: " + _counter);
			_counter = next;


			try {
				Thread.sleep(1);
			} catch (InterruptedException e) {
				break;
			}
			
		}
	}


	@Override
	public void valueChanged(ITable table, String key, Object value, boolean isNew) {
		System.out.println(String.format("valueChanged: Key: {%s} Value: {%s} isNew: {%s}", key, value, isNew));
		
		Boolean reset = (Boolean) value;
		
		if (reset)
		{
			_counter = 0;
			table.putBoolean(key, false);
		}
		
	}

	public static void main(String args[]) {
		Concur instance = new Concur();
		instance.countAndPrint();
	}
}
